import React, { useEffect, useState } from "react";
import axios from "axios";
import { useParams, Link } from "react-router-dom";

function SupplierListPage() {
  const { storeId } = useParams(); // l·∫•y storeId t·ª´ URL
  const [suppliers, setSuppliers] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState("");

  // üß© L·∫•y danh s√°ch supplier
  useEffect(() => {
    const fetchSuppliers = async () => {
      try {
        const token = localStorage.getItem("token"); // token sau khi login
        const res = await axios.get(
          `${import.meta.env.VITE_API_URL || "http://localhost:9999"}/suppliers/stores/${storeId}`,
          {
            headers: {
              Authorization: `Bearer ${token}`,
            },
          }
        );
        setSuppliers(res.data.suppliers || []);
      } catch (err) {
        console.error("L·ªói t·∫£i danh s√°ch nh√† cung c·∫•p:", err);
        setError(
          err.response?.data?.message ||
            "Kh√¥ng th·ªÉ t·∫£i danh s√°ch nh√† cung c·∫•p."
        );
      } finally {
        setLoading(false);
      }
    };

    if (storeId) fetchSuppliers();
  }, [storeId]);

  // üóëÔ∏è H√†m xo√° supplier
  const handleDelete = async (supplierId, supplierName) => {
    if (!window.confirm(`B·∫°n c√≥ ch·∫Øc mu·ªën x√≥a nh√† cung c·∫•p "${supplierName}" kh√¥ng?`)) return;

    try {
      const token = localStorage.getItem("token");
      await axios.delete(
        `${import.meta.env.VITE_API_URL || "http://localhost:9999"}/suppliers/${supplierId}`,
        {
          headers: {
            Authorization: `Bearer ${token}`,
          },
        }
      );

      alert("‚úÖ X√≥a th√†nh c√¥ng!");
      setSuppliers((prev) => prev.filter((s) => s._id !== supplierId));
    } catch (err) {
      console.error("L·ªói x√≥a nh√† cung c·∫•p:", err);
      alert(err.response?.data?.message || "Kh√¥ng th·ªÉ x√≥a nh√† cung c·∫•p.");
    }
  };

  if (loading)
    return <p className="text-center mt-10">‚è≥ ƒêang t·∫£i danh s√°ch...</p>;
  if (error)
    return <p className="text-center mt-10 text-red-600">‚ùå {error}</p>;

  return (
    <div className="p-6 max-w-5xl mx-auto">
      <div className="flex justify-between items-center mb-4">
        <h1 className="text-2xl font-bold">Danh s√°ch nh√† cung c·∫•p</h1>
        <Link
          to={`/stores/${storeId}/suppliers/create`}
          className="bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700"
        >
          + Th√™m nh√† cung c·∫•p
        </Link>
      </div>

      {suppliers.length === 0 ? (
        <p>Ch∆∞a c√≥ nh√† cung c·∫•p n√†o trong c·ª≠a h√†ng n√†y.</p>
      ) : (
        <div className="overflow-x-auto">
          <table className="min-w-full bg-white border border-gray-200 rounded-lg shadow">
            <thead className="bg-gray-100 text-gray-700">
              <tr>
                <th className="py-2 px-4 text-left">T√™n nh√† cung c·∫•p</th>
                <th className="py-2 px-4 text-left">S·ªë ƒëi·ªán tho·∫°i</th>
                <th className="py-2 px-4 text-left">Email</th>
                <th className="py-2 px-4 text-left">ƒê·ªãa ch·ªâ</th>
                <th className="py-2 px-4 text-left">Tr·∫°ng th√°i</th>
                <th className="py-2 px-4 text-center">H√†nh ƒë·ªông</th>
              </tr>
            </thead>
            <tbody>
              {suppliers.map((s) => (
                <tr key={s._id} className="border-t hover:bg-gray-50">
                  <td className="py-2 px-4">{s.name}</td>
                  <td className="py-2 px-4">{s.phone || "-"}</td>
                  <td className="py-2 px-4">{s.email || "-"}</td>
                  <td className="py-2 px-4">{s.address || "-"}</td>
                  <td className="py-2 px-4">
                    {s.status === "ƒëang ho·∫°t ƒë·ªông" ? (
                      <span className="text-green-600 font-medium">
                        {s.status}
                      </span>
                    ) : (
                      <span className="text-red-600 font-medium">
                        {s.status}
                      </span>
                    )}
                  </td>
                  <td className="py-2 px-4 text-center space-x-2">
                    <Link
                      to={`/suppliers/${s._id}`}
                      className="text-blue-600 hover:underline"
                    >
                      Xem
                    </Link>
                    <Link
                      to={`/suppliers/${s._id}/edit`}
                      className="text-yellow-600 hover:underline"
                    >
                      S·ª≠a
                    </Link>

                    {/* X√≥a ‚Äî nh√¨n nh∆∞ Link */}
  <button
    onClick={() => handleDelete(s._id, s.name)}
    className="text-red-600 hover:underline bg-transparent border-none cursor-pointer"
    style={{ padding: 0, font: "inherit" }}
  >
    X√≥a
  </button>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      )}
    </div>
  );
}

export default SupplierListPage;
